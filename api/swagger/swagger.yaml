swagger: "2.0"
info:
  version: "0.0.2"
  title: Tutorial API
# during dev, should point to your local machine
host: localhost:3000
#host: tutorial-api.mybluemix.net
# basePath prefixes all resource paths
basePath: /
#
schemes:
  # tip: remove http to make production-grade
  #- https
  - http
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
  - text/plain
  - text/html
paths:
  /applications:
    # binds app logic to a route (api/controllers/applications.js)
    x-swagger-router-controller: applications
    get:
      description: Returns a list of applications to the caller
      # used as the method name of the controller inside applications.js
      operationId: applications
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              # a pointer to a definition
              $ref: "#/definitions/Application"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /applications/{appId}:
    # binds app logic to a route (api/controllers/applications.js)
    x-swagger-router-controller: applications
    get:
      description: Returns a single application to the caller
      # used as the method name of the controller inside applications.js
      operationId: applications
      parameters:
        - name: appId
          in: path
          description: returns an application object for the given id
          # the path params are explicitly required by the spec
          required: true
          type: string
      responses:
        "200":
          description: Successß
          schema:
            $ref: "#/definitions/Application"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /garages/{garageId}:
    # Use the house address as the garageId
    # binds app logic to a route (api/controllers/garages.js)
    x-swagger-router-controller: garages
    get:
      description: Returns a single garage configurations to the caller
      # used as the method name of the controller inside garages.js
      operationId: garages
      parameters:
        - name: garageId
          in: path
          description: returns a garage object for the given id
          # the path params are explicitly required by the spec
          required: true
          type: string
      responses:
        "200":
          description: Successß
          schema:
            $ref: "#/definitions/Garage"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /hello:
    # binds app logic to a route (api/controllers/hello_world.js)
    x-swagger-router-controller: hello_world
    get:
      description: Returns Hello + ' ' + name
      # used as the method name of the controller inside hello_world.js
      operationId: hello
      parameters:
        - name: name
          in: query
          description: name
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            type: string
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
# complex objects have schema definitions
definitions:
  Application:
    properties:
      appId:
        type: string
      name:
        type: string
      description:
        type: string
      status:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
